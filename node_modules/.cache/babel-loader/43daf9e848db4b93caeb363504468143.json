{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anatoliitelezenko/Desktop/REACT/ReactHomeWorks/goit-react-hw-03-phonebook/src/Components/PhoneBook/PhoneBook.js\";\nimport React, { Component } from 'react';\nimport Form from '../Form/Form';\nimport ContactList from '../ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from '../Filter/Filter';\n\nclass PhoneBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      name: '',\n      filter: ''\n    };\n\n    this.addContact = contact => {\n      const {\n        name\n      } = contact;\n\n      if (this.state.contacts.every(contact => !contact.name.includes(name))) {\n        this.setState(prev => ({\n          contacts: [...prev.contacts, { ...contact,\n            id: uuidv4()\n          }]\n        }));\n      } else {\n        alert(`${name} is already in contacts`);\n      }\n    };\n\n    this.deleteContact = id => {\n      this.setState(prev => ({\n        contacts: this.state.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n\n    this.filterContact = () => {\n      return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n    };\n\n    this.onHandleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const saveStateContacts = localStorage.getItem('contacts');\n\n    if (saveStateContacts) {\n      this.setState({\n        contacts: JSON.parse(saveStateContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('PHONEBOOK componentDidUpdate');\n\n    if (prevState.contacts !== this.state.contacts) {\n      console.log('Пиши в Local Storage');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"subtitle\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        Filter: this.state.filter,\n        onHandleChange: this.onHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: this.state.filter ? this.filterContact() : this.state.contacts,\n        deleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default PhoneBook;","map":{"version":3,"sources":["/Users/anatoliitelezenko/Desktop/REACT/ReactHomeWorks/goit-react-hw-03-phonebook/src/Components/PhoneBook/PhoneBook.js"],"names":["React","Component","Form","ContactList","v4","uuidv4","Filter","PhoneBook","state","contacts","name","filter","addContact","contact","every","includes","setState","prev","id","alert","deleteContact","filterContact","toLowerCase","onHandleChange","e","value","target","componentDidMount","saveStateContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","prevState","console","log","setItem","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from '../Form/Form'\nimport ContactList from '../ContactList/ContactList'\nimport { v4 as uuidv4 } from 'uuid'\nimport Filter from '../Filter/Filter'\n\n\nclass PhoneBook extends Component {\n    state = {\n        contacts: [],\n        name: '',\n        filter: ''\n    }\n\n    componentDidMount() {\n        const saveStateContacts = localStorage.getItem('contacts')\n\n        if (saveStateContacts) {\n            this.setState({\n               contacts: JSON.parse(saveStateContacts)\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('PHONEBOOK componentDidUpdate');\n\n\n        if (prevState.contacts !== this.state.contacts) {\n            console.log('Пиши в Local Storage');\n\n\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    \n\n    addContact = contact => {\n        const { name } = contact\n        if (this.state.contacts.every((contact) => !contact.name.includes(name))) {\n            \n        this.setState(prev => ({\n        contacts: [...prev.contacts , {... contact, id: uuidv4()}]\n    }))\n\n        } else {\n            alert(`${name} is already in contacts`)\n     }\n     \n}\n\n     deleteContact = id => {\n        this.setState(prev => ({\n            contacts: this.state.contacts.filter(contact => contact.id !== id)\n    }))\n}\n\n filterContact = () => {\n     return this.state.contacts.filter(contact =>\n         contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n     \n }\n    \n     onHandleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n     })\n    }\n\n    render() {\n        return (\n            <>\n                \n                <h1 className='title'>PhoneBook</h1>\n                <Form addContact={this.addContact} />\n            \n                <h2 className='subtitle'>Contacts</h2>\n                <Filter Filter={this.state.filter} onHandleChange={this.onHandleChange} />\n                <ContactList contacts={this.state.filter ? this.filterContact() : this.state.contacts} deleteContact={this.deleteContact} />\n\n                </>\n        );\n    }\n}\n\nexport default PhoneBook;"]},"metadata":{},"sourceType":"module"}